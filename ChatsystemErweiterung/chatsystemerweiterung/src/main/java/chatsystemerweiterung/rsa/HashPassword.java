package chatsystemerweiterung.rsa;

import java.math.BigInteger;

public class HashPassword {
    public static String hashWithRSA(String word) {
        publicKey key = new publicKey(new BigInteger(
                "777007691810996210525566761882839097173826749525786355009508239301709781137256922571089134329061433520652561401350207737087187554989838108887221576086423361647075960399905250828524967960413318218978995424787387364930886785554644662437249155773490840309193513796986005995896515713547474981933037683928829946789882195305857325460473414662738814657845915261773364805475428015609518324133867520518389854249611588579490029261493331272678517568319479146581646555199507480556325524376419461441773274201500989883851968791025494930124429535248618995248313026286657613665534615525749187286746042995412947085474517235317299865931135270645618214864067341093887582451991433537392646182521134074716842385451158537339568378888517615113414179809809208650622041514711279457745593312408954975854438949374300366584671543183606031474311804326172470588271039648972689851270055828060938687998025528375933715035867001408704054912644578776453622230169945395862235574337315065129898449227140907899920214617286893243723665361487245625698134962161191704490488820959092657115572965755115284121422891734469754332808164206228760916573288147327432593389860865154705985793117583412808065070914631610382495669055937286499318641892327701885211149009174236528349872251746580420484138956302743479175645630166096385860950713060926105421650586770242391297298763015643857793221291635898036610352649966269378573757481885981926776170302965716413863048893435468764438671184385005340142924213828542024375987886209142600612227078769009732859597192162207140837470218199100260567365113846281804886273179590946796037002371430119160452868863670002454986086838199077446861928386687183462464329846162295664678909321254708636842466300883343381579195348166854220655947705588787820173187180510027624208107602762567896019893771510227121534722395711505845049487735977496701482010761602196960252009785701157284557674819805021805259902164742713936100288172631509217441798056976669196810737887451869885927798617267129146902736543203103236555314587684983463780574966424302277572587575303873481092572951877416431275480784268343904270729437382729280917606636250108010963655002459862147140466116448170893828106104009760833273884451799586576837385695470040245672581653024759351520056133425241707968158375133237788759005852886652780249272015470902253266043304691670816594152981439248870392715055684399453480800219153124327107441293979788690196314897213614206045051888703107733864311936608617748915482008153890608891084495286882227"),
                new BigInteger(
                        "131306833229005572147558798719339929390609320008489132256272386043376332121334064379565834434971898593892486022975132851921504716144700320073626757504948924768506680336733470563497369031764135068690831995570562629853479204814771404044692202489824502960027605814172444756391412359918184891320611918577281348883"));
        return RSA.encry(word, key.getN(), key.getE());
    }
}
